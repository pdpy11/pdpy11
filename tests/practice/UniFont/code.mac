; UniFont 1.1 - font auto switcher for BK 0011M
; Compile this source with PDPy11: https://github.com/imachug/PDPy11
; (c) Manwe/SandS 2021

		EMT42	= 117474	; address in Monitor
		Font1	= ENDDRV
		Font2	= Font1+3600
		Font	= 112276	; font data in Monitor-10
		Inject1	= 100252	; address in Monitor-10
		Inject2	= 105272	; address in Monitor-10
		MemPage	= 177716
		Lo		= 10000		; page at address 40000-100000
		Hi 		= 400		; memory page at address 100000-140000
		Pg0		= 6			; codes of memory pages
		Pg1		= 0
		Pg2		= 2
		Pg3		= 3
		Pg4		= 4			; MKDOS page
		Sc0		= 1			; screen 0
		Sc1		= 7			; screen 1
		Pg7		= 5
		Page4	= Sc0*Lo + Pg4*Hi + 4000	; Screen0 at 40000 and page 4 at 100000
		Page7	= Sc0*Lo + Pg7*Hi + 4000	; Screen0 at 40000 and page 7 at 100000
		DrvSize	= ENDDRV-DRIVER	; size of driver


BEGIN:	CMPB @#177717,#200		; is it BK-0010 or BK-0011?
		BNE LOAD
			MOV #BK0010,R1		; quit if BK-0010
			BR QUIT

LOAD:	MOV #LOAD1,R4
		MOV #320,R1				; pointer to EMT 36 data
		MOV #2,R2
1:			MOV R1,R3
			MOV #3,(R3)+		; read command
			MOV (R4)+,(R3)+		; address
			CLR (R3)+			; size
			MOV #16.,R0			; copy file name
2:				MOVB (R4)+,(R3)+
			SOB R0,2
			EMT 36				; load font 1
			TSTB 1(R1)			; test for error
			BNE PAUSE
		SOB R2,1

		MOV #DrvSize/2,R0		; driver size + empty word
		MOV #Inject1,R1			; where to fix Monitor code
		MOV #Inject2,R2			; where to fix Monitor code

;SMK:	CMP @#167776,#176200	; check HDD controller version SMK-64
;		BLO TELEGR
;		MOV #170000,R3			; high memory address
;		MOV #5770-DrvSize,R4	; size of high memory
;1:		TST (R3)				; free memory?
;		BEQ INJECT
;			CMP 10(R3),#111314	; is UniFont driver installed already?
;			BNE 2
;				CMP (R1)+,(R2)+	; add 2 to R1 and R2
;				DEC R0			; reduce size by 1 word
;				BR INJ2			; skip Monitor test
;2:			CMP (R3),R4			; is the current driver too large?
;			BHI 3
;			ADD (R3),R3			; seek to the end of current driver
;			SUB (R3),R4			; reduce amount of free memory
;			BR 1				; check next memory block
;3:				MOV #NOMEM,R1
;				BR QUIT

TELEGR:	MOV #EMT42,R3			; copy driver there
		CMP (R3),#160004		; VD.DRV loaded?
		BNE 1
			MOV #VD,R1			; print "remove VD"
			BR QUIT
1:		CMP (R3),#10046			; MOV R0,-(SP)
		BNE UNK
		CMP 4(R3),#52700		; BIS #
		BNE UNK
		MOV #207,(R3)+			; dummy EMT42
		BR INJECT
UNK:		MOV #UNKNOW,R1
QUIT:		MOV #200,R2
			EMT 20
			MOV #5,R1
PAUSE:		CLR R0
1:			SOB R0,1			; pause
W:			SOB R1,PAUSE
			RET					; quit to DOS

INJECT:	CMP (R1)+,#106427		; check for MTPS #
		BNE UNK
		CMP (R2)+,#4767			; check for CALL 111314
		BNE UNK
		CMP (R2),#4016
		BNE UNK
INJ2:	MOV R3,(R1)
		ADD #DRV2-DRIVER,(R1)	; jump there
		MOV #4737,-(R1)			; CALL@# code
		MOV R3,(R2)				; inject UniFont address
		ADD #DRV1-DRIVER,(R2)
		MOV #4737,-(R2)			; CALL@# code

INSTAL:	MOV #DRIVER,R5			; copy from
1:			MOV (R5)+,(R3)+		; copy driver to high memory
		SOB R0,1

COPY:	MOV #100000,R2
		MOV #40000,R1
		MOV #10000,R0
		CMP @#120446,#"ND"		; part of "ANDOS" text
		BEQ 1
		ASL R0					; for MKDOS
1:		MOV #Pg4*Lo + Pg7*Hi + 4000,@#MemPage	; page 4 at 40000 and page 7 at 100000,@#MemPage
2:			MOV (R1)+,(R2)+		; copy Monitor-10 from page 4 to page 7
		SOB R0,2
		MOV #Font1,R1
		MOV #Font2,R2
		MOV #Font-40000,R3
		MOV #Font,R4
		MOV #3600/2,R0			; font size
3:			MOV (R1)+,(R3)+		; copy font 1 to page 4
			MOV (R2)+,(R4)+		; copy font 2 to page 7
		SOB R0,3
		MOV #Page4,@#MemPage

OK:		MOV #GOOD,R1
		MOV #240,W				; write NOP
		BR QUIT

BK0010:	.ASCIZ "UniFont works on BK0011M only"<12>
NOMEM:	.ASCIZ "Not enough space in high memory"<12>
VD:		.ASCIZ "Please remove VD.DRV"<12>
UNKNOW:	.ASCIZ "Unknown Monitor"<12>
GOOD:	.ASCIZ "UniFont is installed successfully!"<12>
		.EVEN
LOAD1:	.WORD Font1					; address
		.ASCII "DWG_BLUE.BKF    "	; compact font for 64 symbols per line
LOAD2:	.WORD Font2					; address
		.ASCII "10.BKF          "	; whide font for 32 symbols per line

DRIVER:	.WORD DrvSize-2				; size
		.WORD 0						; no vectors
		NOP							; first instruction of driver
DRV1:	CALL @#111314				; hide cursor
		TSTB @#40					; check current state (0 means 64 symbols per line)
		BNE 1
			MOV #Page7,@#MemPage	; switch to 32 symbols per line
			CMP @0(SP),#105167		; proper code in 7th page? COMB
			BEQ 2
1:		MOV #Page4,@#MemPage		; switch to 64 symbols per line
2:		RET							; return to Monitor-10
DRV2:	MOV #Page4,@#MemPage		; switch to 64 symbols per line
		MTPS #0						; init Monitor
		RET
		.WORD 0
ENDDRV:
	.END
